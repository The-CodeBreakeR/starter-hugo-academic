@InProceedings{10.1007/978-3-031-52113-3_5,
author="Beikmohammadi, Arash
and Evans, William
and Tabatabaee, Seyed Ali",
editor="Fernau, Henning
and Gaspers, Serge
and Klasing, Ralf",
title="Fractional Bamboo Trimming and Distributed Windows Scheduling",
booktitle="SOFSEM 2024: Theory and Practice of Computer Science",
year="2024",
publisher="Springer Nature Switzerland",
address="Cham",
pages="69--81",
abstract="This paper studies two related scheduling problems: fractional bamboo trimming and distributed windows scheduling. In the fractional bamboo trimming problem, we are given n bamboos with different growth rates and cut fractions. At the end of each day, we can cut a fraction of one bamboo. The goal is to design a perpetual schedule of cuts to minimize the height of the tallest bamboo ever. For this problem, we present a 2-approximation algorithm. In addition, we prove upper bounds on the approximation factors of well-known algorithms Reduce-Max and Reduce-Fastest(x) for this problem. In the closely related windows scheduling problem, given a multiset of positive integers {\$}{\$}W = {\backslash}{\{}w{\_}1, ..., w{\_}n{\backslash}{\}}{\$}{\$}W={\{}w1,...,wn{\}}, we want to schedule n pages on broadcasting channels such that the time interval between any two consecutive appearances of the i-th page ({\$}{\$}1 {\backslash}le i {\backslash}le n{\$}{\$}1≤i≤n) is at most {\$}{\$}w{\_}i{\$}{\$}wi. The goal of this problem is to minimize the number of channels. We provide an algorithm for the windows scheduling problem that uses at most {\$}{\$}{\backslash}left{\backslash}lceil {\backslash}frac{\{}d(W) + 1{\}}{\{}0.75{\}} {\backslash}right{\backslash}rceil {\$}{\$}d(W)+10.75channels, where {\$}{\$}d(W) = {\backslash}sum {\_}{\{}i=1{\}}^{\{}n{\}}{\{}{\backslash}frac{\{}1{\}}{\{}w{\_}i{\}}{\}}{\$}{\$}d(W)=∑i=1n1wi. When {\$}{\$}d(W) {\backslash}le 46{\$}{\$}d(W)≤46, our algorithm guarantees a smaller upper bound on the number of channels than the best-known algorithm in the literature. We also describe the first approximation algorithm for the windows scheduling problem in a distributed setting, where input data is partitioned among a set of m machines. Furthermore, we introduce patterns of some multisets with {\$}{\$}d(W) {\backslash}le 1{\$}{\$}d(W)≤1for which windows scheduling on one channel (i.e., pinwheel scheduling) is impossible.",
isbn="978-3-031-52113-3"
}
